@*@model IEnumerable<NetPressAssignment.Models.Post>*@
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<NetPressAssignment.Models.Post>
<!--the above will refer to a view model later on so that we can adjust how labels are displayed without modifying the model itself-->
@{
    ViewBag.Title = "Home Page";
}

<!-- Main Content -->
<div class="container">
    <div class="row">
        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <p>
                Author: @Html.TextBox("authorSearch")
                Category: @Html.DropDownList("postCategory", "All")
                Title: @Html.TextBox("searchString")
                <input type="submit" value="Filter" class="btn btn-default" />
            </p>
        }
        <hr>

        <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
            <div class="post-preview">
                   
                @foreach (var p in Model)
                {

                    <a href="@Url.Action("Details", "Posts", new { id = p.PostID })" >
                    <h2 class="post-title">
                        @*@Html.DisplayNameFor(model => model.Title)*@
                        @Html.DisplayFor(modelItem => p.Title)
                    </h2>
                    <h3 class="post-subtitle">
                        @*@Html.DisplayNameFor(model => model.Category)*@
                        @Html.DisplayFor(modelItem => p.Category.Name)
                    </h3>
                    <p class="post-meta">Posted by @Html.DisplayFor(modelItem => p.AspNetUser.UserName) Date Created @Html.DisplayFor(modelItem => p.DateCreated) </p>
                    </a>
                    @*<div class=" post-preview">
                              @Html.ActionLink("View Post", "Details", "Posts", new { id = p.PostID }, null)<br/>
                        </div>*@
                }
            </div>
            <hr>

            <!-- Pager -->
            <ul class="pager">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, authorSearch = Request.QueryString["authorSearch"], postCategory = Request.QueryString["postCategory"], searchString = Request.QueryString["searchString"] }))
                Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Posts
            </ul>
            

        </div>
        
    </div>
</div>


@section PostTitle{
    <h1>NETPress</h1>
    <hr class="small">
    <span class="subheading">By Clara Galea, Sheryl Camilleri, Natasha Nikolic</span>
}
